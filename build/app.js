!function(){function e(e){}function t(e,t){function o(e,t){t.otherwise("/"),e.state("start",{url:"/",templateUrl:"../views/start.html",controller:"mainController"}).state("children",{url:"/children",templateUrl:"../views/children.html",controller:"mainController"}).state("childIncome",{url:"/childIncome",templateUrl:"../views/childIncome.html",controller:"mainController"}).state("household",{url:"/household",templateUrl:"../views/household.html",controller:"mainController"}).state("signature",{url:"/signature",templateUrl:"../views/signature.html",controller:"mainController"}).state("confirmation",{url:"/confirmation",templateUrl:"../views/confirmation.html",controller:"mainController"}).state("export",{url:"/export",templateUrl:"../views/export.html",controller:"mainController"}).state("styleguide",{url:"/styleguide",templateUrl:"../views/styleguide.html",controller:"mainController"}).state("signup",{url:"/signup",templateUrl:"../views/signup.html"}).state("login",{url:"/login",templateUrl:"../views/login.html"})}o(e,t)}angular.module("eatChallengeApp",["ngMaterial","ui.router"]).config(t).config(e),e.$inject=["$mdThemingProvider"],t.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){function e(e,t,o,n){o.schoolDistrict="Oakland Unified School District",o.studentStatuses=["in school","home schooled","some other status"],o.household=n.get(),o.$watch("household.childCount",function(e){for(;e>o.household.children.length;)o.household.incrementChildCount()}),o.$watch("household.otherMembersCount",function(e){for(;e>o.household.otherMembers.length;)o.household.incrementOtherMembersCount()})}angular.module("eatChallengeApp").controller("mainController",e),e.$inject=["$mdDialog","$mdMedia","$scope","Household"]}(),function(){function e(){var e={scope:{member:"="},restrict:"A",replace:!0,templateUrl:"../views/income.html",link:t};return e}function t(e){e.incomeSources={work:{vaule:"work",label:"Earnings from work",frequency:["weekly","biweekly","2x month","monthly"],annotation:{child:"A child has a job where they earn salary or wages ",otherMember:""}},socialSecurity:{vaule:"socialSecurity",label:"Social Security Disability Payments or Survivorâ€™s Benefits ",frequency:["monthly"],annotation:{child:"A child is blind or disabled and receives Social Security benefits. A parent is disabled, retired, or deceased, and their child receives social security benefits",otherMember:""}},otherPerson:{vaule:"otherPerson",label:"Income from persons outside the household",frequency:["weekly","biweekly","2x month","monthly"],annotation:{child:"A friend or extended family member regularly gives a child spending money",otherMember:""}},otherSource:{vaule:"otherSource",label:"Income from any other source",frequency:["weekly","biweekly","2x month","monthly"],annotation:{child:"A child receives income from a private pension fund, annuity, or trust",otherMember:""}}},0===e.member.incomeSources.length&&(e.member.incomeSources=[],Object.keys(e.incomeSources).forEach(function(t){e.member.incomeSources.push({type:t,amount:null,frequency:null})})),console.log(e.member)}angular.module("eatChallengeApp").directive("incomeQuestions",e)}(),function(){function e(){return{scope:{model:"="},restrict:"A",replace:!0,templateUrl:"../views/yesno.html"}}angular.module("eatChallengeApp").directive("yesNoInput",e)}(),function(){function e(e){function t(){return r?r:(r=Object.create(l),r.init(),r)}function o(){return e.post("/household",r)}function n(){var e={};return e}this.get=t,this.save=o,this.clear=n;var r,i={init:function(){this.incomeSourceCount=0,this.incomeSources=[]},incrementIncomeSources:function(){for(this.incomeSourceCount++;this.incomeSourceCount>this.incomeSources.length;)this.incomeSources.push({})}},l={init:function(){this.children=[],this.childCount=0,this.incrementChildCount(),this.otherMembers=[],this.otherMembersCount=0,this.incrementOtherMembersCount()},incrementChildCount:function(){for(this.childCount++;this.childCount>this.children.length;){var e=Object.create(i);e.init(),e.isChild=!0,this.children.push(e)}},incrementOtherMembersCount:function(){for(this.otherMembersCount++;this.otherMembersCount>this.otherMembers.length;){var e=Object.create(i);e.init(),e.isChild=!1,this.otherMembers.push(e)}}};return this}angular.module("eatChallengeApp").service("Household",e),e.$inject=["$http"]}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsImNvbnRyb2xsZXJzL21haW4uanMiLCJkaXJlY3RpdmVzL2luY29tZS5qcyIsImRpcmVjdGl2ZXMveWVzbm8uanMiLCJzZXJ2aWNlcy9ob3VzZWhvbGQuanMiXSwibmFtZXMiOlsibWF0ZXJpYWxEZXNpZ25UaGVtZXIiLCIkbWRUaGVtaW5nUHJvdmlkZXIiLCJyb3V0ZXJDb25maWciLCIkc3RhdGVQcm92aWRlciIsIiR1cmxSb3V0ZXJQcm92aWRlciIsInJvdXRlciIsIm90aGVyd2lzZSIsInN0YXRlIiwidXJsIiwidGVtcGxhdGVVcmwiLCJjb250cm9sbGVyIiwiYW5ndWxhciIsIm1vZHVsZSIsImNvbmZpZyIsIiRpbmplY3QiLCJtYWluQ29udHJvbGxlciIsIiRtZERpYWxvZyIsIiRtZE1lZGlhIiwiJHNjb3BlIiwiSG91c2Vob2xkIiwic2Nob29sRGlzdHJpY3QiLCJzdHVkZW50U3RhdHVzZXMiLCJob3VzZWhvbGQiLCJnZXQiLCIkd2F0Y2giLCJuZXdWYWwiLCJjaGlsZHJlbiIsImxlbmd0aCIsImluY3JlbWVudENoaWxkQ291bnQiLCJvdGhlck1lbWJlcnMiLCJpbmNyZW1lbnRPdGhlck1lbWJlcnNDb3VudCIsImluY29tZURpcmVjdGl2ZSIsImRpcmVjdGl2ZSIsInNjb3BlIiwibWVtYmVyIiwicmVzdHJpY3QiLCJyZXBsYWNlIiwibGluayIsImluY29tZVNvdXJjZXMiLCJ3b3JrIiwidmF1bGUiLCJsYWJlbCIsImZyZXF1ZW5jeSIsImFubm90YXRpb24iLCJjaGlsZCIsIm90aGVyTWVtYmVyIiwic29jaWFsU2VjdXJpdHkiLCJvdGhlclBlcnNvbiIsIm90aGVyU291cmNlIiwiT2JqZWN0Iiwia2V5cyIsImZvckVhY2giLCJpbmNvbWVTb3VyY2UiLCJwdXNoIiwidHlwZSIsImFtb3VudCIsImNvbnNvbGUiLCJsb2ciLCJ5ZXNOb0lucHV0IiwibW9kZWwiLCJob3VzZWhvbGRTZXJ2aWNlIiwiJGh0dHAiLCJjcmVhdGUiLCJpbml0Iiwic2F2ZSIsInBvc3QiLCJjbGVhciIsInRoaXMiLCJQZXJzb24iLCJpbmNvbWVTb3VyY2VDb3VudCIsImluY3JlbWVudEluY29tZVNvdXJjZXMiLCJjaGlsZENvdW50Iiwib3RoZXJNZW1iZXJzQ291bnQiLCJuZXdDaGlsZCIsImlzQ2hpbGQiLCJuZXdNZW1iZXIiLCJzZXJ2aWNlIl0sIm1hcHBpbmdzIjoiQ0FBQSxXQVFBLFFBQUFBLEdBQUFDLElBaUJBLFFBQUFDLEdBQUFDLEVBQUFDLEdBS0EsUUFBQUMsR0FBQUYsRUFBQUMsR0FDQUEsRUFBQUUsVUFBQSxLQUVBSCxFQUNBSSxNQUFBLFNBQ0FDLElBQUEsSUFDQUMsWUFBQSxzQkFDQUMsV0FBQSxtQkFPQUgsTUFBQSxZQUNBQyxJQUFBLFlBRUFDLFlBQUEseUJBQ0FDLFdBQUEsbUJBRUFILE1BQUEsZUFDQUMsSUFBQSxlQUVBQyxZQUFBLDRCQUNBQyxXQUFBLG1CQUVBSCxNQUFBLGFBQ0FDLElBQUEsYUFFQUMsWUFBQSwwQkFDQUMsV0FBQSxtQkFFQUgsTUFBQSxhQUNBQyxJQUFBLGFBRUFDLFlBQUEsMEJBQ0FDLFdBQUEsbUJBRUFILE1BQUEsZ0JBQ0FDLElBQUEsZ0JBQ0FDLFlBQUEsNkJBQ0FDLFdBQUEsbUJBRUFILE1BQUEsVUFDQUMsSUFBQSxVQUNBQyxZQUFBLHVCQUNBQyxXQUFBLG1CQUVBSCxNQUFBLGNBQ0FDLElBQUEsY0FDQUMsWUFBQSwyQkFDQUMsV0FBQSxtQkFFQUgsTUFBQSxVQUNBQyxJQUFBLFVBQ0FDLFlBQUEseUJBR0FGLE1BQUEsU0FDQUMsSUFBQSxTQUNBQyxZQUFBLHdCQS9EQUosRUFBQUYsRUFBQUMsR0F6QkFPLFFBQ0FDLE9BQUEsbUJBQUEsYUFBQSxjQUNBQyxPQUFBWCxHQUNBVyxPQUFBYixHQUVBQSxFQUFBYyxTQUFBLHNCQWdCQVosRUFBQVksU0FBQSxpQkFBQSx5QkN2QkEsV0FRQSxRQUFBQyxHQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxHQUVBRCxFQUFBRSxlQUFBLGtDQUNBRixFQUFBRyxpQkFBQSxZQUFBLGdC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QUFBWixPQUNBWSxFQUFBRCxTQUFBLEVBQ0FQLEtBQUF0QyxhQUFBd0IsS0FBQXNCLEtBc0NBLE9BQUFSLE1BM0ZBeEQsUUFDQUMsT0FBQSxtQkFDQWdFLFFBQUEsWUFBQWhCLEdBRUFBLEVBQUE5QyxTQUFBIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpIHtcblxuICAgIGFuZ3VsYXJcbiAgICAgIC5tb2R1bGUoJ2VhdENoYWxsZW5nZUFwcCcsWyduZ01hdGVyaWFsJywndWkucm91dGVyJ10pXG4gICAgICAuY29uZmlnKHJvdXRlckNvbmZpZylcbiAgICAgIC5jb25maWcobWF0ZXJpYWxEZXNpZ25UaGVtZXIpO1xuXG4gICAgbWF0ZXJpYWxEZXNpZ25UaGVtZXIuJGluamVjdCA9IFsnJG1kVGhlbWluZ1Byb3ZpZGVyJ107XG4gICAgZnVuY3Rpb24gbWF0ZXJpYWxEZXNpZ25UaGVtZXIoJG1kVGhlbWluZ1Byb3ZpZGVyKSB7XG4gICAgICAgIC8vICRtZFRoZW1pbmdQcm92aWRlci50aGVtZSgnbGlnaHQtYmx1ZScpO1xuICAgICAgICAvLyAucHJpbWFyeVBhbGV0dGUoJ3BpbmsnLCB7XG4gICAgICAgIC8vICAgJ2RlZmF1bHQnOiAnNDAwJywgLy8gYnkgZGVmYXVsdCB1c2Ugc2hhZGUgNDAwIGZyb20gdGhlIHBpbmsgcGFsZXR0ZSBmb3IgcHJpbWFyeSBpbnRlbnRpb25zXG4gICAgICAgIC8vICAgJ2h1ZS0xJzogJzEwMCcsIC8vIHVzZSBzaGFkZSAxMDAgZm9yIHRoZSA8Y29kZT5tZC1odWUtMTwvY29kZT4gY2xhc3NcbiAgICAgICAgLy8gICAnaHVlLTInOiAnNjAwJywgLy8gdXNlIHNoYWRlIDYwMCBmb3IgdGhlIDxjb2RlPm1kLWh1ZS0yPC9jb2RlPiBjbGFzc1xuICAgICAgICAvLyAgICdodWUtMyc6ICdBMTAwJyAvLyB1c2Ugc2hhZGUgQTEwMCBmb3IgdGhlIDxjb2RlPm1kLWh1ZS0zPC9jb2RlPiBjbGFzc1xuICAgICAgICAvLyB9KVxuICAgICAgICAvLyAvLyBJZiB5b3Ugc3BlY2lmeSBsZXNzIHRoYW4gYWxsIG9mIHRoZSBrZXlzLCBpdCB3aWxsIGluaGVyaXQgZnJvbSB0aGVcbiAgICAgICAgLy8gLy8gZGVmYXVsdCBzaGFkZXNcbiAgICAgICAgLy8gLmFjY2VudFBhbGV0dGUoJ3B1cnBsZScsIHtcbiAgICAgICAgLy8gICAnZGVmYXVsdCc6ICcyMDAnIC8vIHVzZSBzaGFkZSAyMDAgZm9yIGRlZmF1bHQsIGFuZCBrZWVwIGFsbCBvdGhlciBzaGFkZXMgdGhlIHNhbWVcbiAgICAgICAgLy8gfSk7XG4gICAgfVxuXG4gICAgcm91dGVyQ29uZmlnLiRpbmplY3QgPSBbJyRzdGF0ZVByb3ZpZGVyJywgJyR1cmxSb3V0ZXJQcm92aWRlciddO1xuXG4gICAgZnVuY3Rpb24gcm91dGVyQ29uZmlnICgkc3RhdGVQcm92aWRlciwgJHVybFJvdXRlclByb3ZpZGVyKSB7XG5cbiAgICAgICAgcm91dGVyKCRzdGF0ZVByb3ZpZGVyLCAkdXJsUm91dGVyUHJvdmlkZXIpO1xuXG4gICAgICAgIC8vLy8vLy8vLy9cbiAgICAgICAgZnVuY3Rpb24gcm91dGVyKCRzdGF0ZVByb3ZpZGVyLCAkdXJsUm91dGVyUHJvdmlkZXIpIHtcbiAgICAgICAgICAgICR1cmxSb3V0ZXJQcm92aWRlci5vdGhlcndpc2UoJy8nKTtcblxuICAgICAgICAgICAgJHN0YXRlUHJvdmlkZXJcbiAgICAgIC5zdGF0ZSgnc3RhcnQnLCB7XG4gICAgICAgICAgdXJsOiAnLycsXG4gICAgICAgICAgdGVtcGxhdGVVcmw6ICcuLi92aWV3cy9zdGFydC5odG1sJyxcbiAgICAgICAgICBjb250cm9sbGVyOiAnbWFpbkNvbnRyb2xsZXInXG4gICAgICB9KVxuICAgICAgLy8gLnN0YXRlKCdhcHBsaWNhdGlvbicse1xuICAgICAgLy8gICAgIHJlc29sdmU6IHtcbiAgICAgIC8vICAgICAgICAgaG91c2Vob2xkOiB7fTtcbiAgICAgIC8vICAgICB9XG4gICAgICAvLyB9KVxuICAgICAgLnN0YXRlKCdjaGlsZHJlbicsIHtcbiAgICAgICAgICB1cmw6ICcvY2hpbGRyZW4nLFxuICAgICAgICAgIC8vIHBhcmVudDogJ2FwcGxpY2F0aW9uJyxcbiAgICAgICAgICB0ZW1wbGF0ZVVybDogJy4uL3ZpZXdzL2NoaWxkcmVuLmh0bWwnLFxuICAgICAgICAgIGNvbnRyb2xsZXI6ICdtYWluQ29udHJvbGxlcidcbiAgICAgIH0pXG4gICAgICAuc3RhdGUoJ2NoaWxkSW5jb21lJywge1xuICAgICAgICAgIHVybDogJy9jaGlsZEluY29tZScsXG4gICAgICAgICAgLy8gcGFyZW50OiAnYXBwbGljYXRpb24nLFxuICAgICAgICAgIHRlbXBsYXRlVXJsOiAnLi4vdmlld3MvY2hpbGRJbmNvbWUuaHRtbCcsXG4gICAgICAgICAgY29udHJvbGxlcjogJ21haW5Db250cm9sbGVyJ1xuICAgICAgfSlcbiAgICAgIC5zdGF0ZSgnaG91c2Vob2xkJywge1xuICAgICAgICAgIHVybDogJy9ob3VzZWhvbGQnLFxuICAgICAgICAgIC8vIHBhcmVudDogJ2FwcGxpY2F0aW9uJyxcbiAgICAgICAgICB0ZW1wbGF0ZVVybDogJy4uL3ZpZXdzL2hvdXNlaG9sZC5odG1sJyxcbiAgICAgICAgICBjb250cm9sbGVyOiAnbWFpbkNvbnRyb2xsZXInXG4gICAgICB9KVxuICAgICAgLnN0YXRlKCdzaWduYXR1cmUnLCB7XG4gICAgICAgICAgdXJsOiAnL3NpZ25hdHVyZScsXG4gICAgICAgICAgLy8gcGFyZW50OiAnYXBwbGljYXRpb24nLFxuICAgICAgICAgIHRlbXBsYXRlVXJsOiAnLi4vdmlld3Mvc2lnbmF0dXJlLmh0bWwnLFxuICAgICAgICAgIGNvbnRyb2xsZXI6ICdtYWluQ29udHJvbGxlcidcbiAgICAgIH0pXG4gICAgICAuc3RhdGUoJ2NvbmZpcm1hdGlvbicsIHtcbiAgICAgICAgICB1cmw6ICcvY29uZmlybWF0aW9uJyxcbiAgICAgICAgICB0ZW1wbGF0ZVVybDogJy4uL3ZpZXdzL2NvbmZpcm1hdGlvbi5odG1sJyxcbiAgICAgICAgICBjb250cm9sbGVyOiAnbWFpbkNvbnRyb2xsZXInXG4gICAgICB9KVxuICAgICAgLnN0YXRlKCdleHBvcnQnLCB7XG4gICAgICAgICAgdXJsOiAnL2V4cG9ydCcsXG4gICAgICAgICAgdGVtcGxhdGVVcmw6ICcuLi92aWV3cy9leHBvcnQuaHRtbCcsXG4gICAgICAgICAgY29udHJvbGxlcjogJ21haW5Db250cm9sbGVyJ1xuICAgICAgfSlcbiAgICAgIC5zdGF0ZSgnc3R5bGVndWlkZScsIHtcbiAgICAgICAgICB1cmw6ICcvc3R5bGVndWlkZScsXG4gICAgICAgICAgdGVtcGxhdGVVcmw6ICcuLi92aWV3cy9zdHlsZWd1aWRlLmh0bWwnLFxuICAgICAgICAgIGNvbnRyb2xsZXI6ICdtYWluQ29udHJvbGxlcidcbiAgICAgIH0pXG4gICAgICAuc3RhdGUoJ3NpZ251cCcsIHtcbiAgICAgICAgICB1cmw6ICcvc2lnbnVwJyxcbiAgICAgICAgICB0ZW1wbGF0ZVVybDogJy4uL3ZpZXdzL3NpZ251cC5odG1sJyxcbiAgICAgICAgICAvLyBjb250cm9sbGVyOiAnbWFpbkNvbnRyb2xsZXInXG4gICAgICB9KVxuICAgICAgLnN0YXRlKCdsb2dpbicsIHtcbiAgICAgICAgICB1cmw6ICcvbG9naW4nLFxuICAgICAgICAgIHRlbXBsYXRlVXJsOiAnLi4vdmlld3MvbG9naW4uaHRtbCcsXG4gICAgICAgICAgLy8gY29udHJvbGxlcjogJ21haW5Db250cm9sbGVyJ1xuICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG5cbn0pKCk7XG4iLCIoZnVuY3Rpb24oKSB7XG5cbmFuZ3VsYXJcbiAgICAubW9kdWxlKCdlYXRDaGFsbGVuZ2VBcHAnKVxuICAgIC5jb250cm9sbGVyKCdtYWluQ29udHJvbGxlcicsIG1haW5Db250cm9sbGVyKTtcblxubWFpbkNvbnRyb2xsZXIuJGluamVjdCA9IFsnJG1kRGlhbG9nJywgJyRtZE1lZGlhJywgJyRzY29wZScsICdIb3VzZWhvbGQnXTtcblxuZnVuY3Rpb24gbWFpbkNvbnRyb2xsZXIgKCRtZERpYWxvZywgJG1kTWVkaWEsICRzY29wZSwgSG91c2Vob2xkKSB7XG4gICAgLy8gVE9ETzogcmVwbGFjZSBzY29wZSB3aXRoIHZtXG4gICAgJHNjb3BlLnNjaG9vbERpc3RyaWN0ID0gJ09ha2xhbmQgVW5pZmllZCBTY2hvb2wgRGlzdHJpY3QnO1xuICAgICRzY29wZS5zdHVkZW50U3RhdHVzZXMgPSBbJ2luIHNjaG9vbCcsICdob21lIHNjaG9vbGVkJywgJ3NvbWUgb3RoZXIgc3RhdHVzJ107XG4gICAgJHNjb3BlLmhvdXNlaG9sZCA9IEhvdXNlaG9sZC5nZXQoKTtcbiAgICAkc2NvcGUuJHdhdGNoKCdob3VzZWhvbGQuY2hpbGRDb3VudCcsIGZ1bmN0aW9uKG5ld1ZhbCkge1xuICAgICAgICB3aGlsZSAobmV3VmFsID4gJHNjb3BlLmhvdXNlaG9sZC5jaGlsZHJlbi5sZW5ndGgpIHtcbiAgICAgICAgICAgICRzY29wZS5ob3VzZWhvbGQuaW5jcmVtZW50Q2hpbGRDb3VudCgpO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgJHNjb3BlLiR3YXRjaCgnaG91c2Vob2xkLm90aGVyTWVtYmVyc0NvdW50JywgZnVuY3Rpb24obmV3VmFsKSB7XG4gICAgICAgIHdoaWxlIChuZXdWYWwgPiAkc2NvcGUuaG91c2Vob2xkLm90aGVyTWVtYmVycy5sZW5ndGgpIHtcbiAgICAgICAgICAgICRzY29wZS5ob3VzZWhvbGQuaW5jcmVtZW50T3RoZXJNZW1iZXJzQ291bnQoKTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuXG59KSgpO1xuIiwiKGZ1bmN0aW9uKCkge1xuXG4gICAgYW5ndWxhclxuICAgICAgICAubW9kdWxlKCdlYXRDaGFsbGVuZ2VBcHAnKVxuICAgICAgICAuZGlyZWN0aXZlKCdpbmNvbWVRdWVzdGlvbnMnLCBpbmNvbWVEaXJlY3RpdmUpO1xuXG4gICAgZnVuY3Rpb24gaW5jb21lRGlyZWN0aXZlKCkge1xuICAgICAgICB2YXIgZGlyZWN0aXZlID0ge1xuICAgICAgICAgICAgc2NvcGU6IHtcbiAgICAgICAgICAgICAgICBtZW1iZXI6ICc9J1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHJlc3RyaWN0OiAnQScsXG4gICAgICAgICAgICByZXBsYWNlOiB0cnVlLFxuICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcuLi92aWV3cy9pbmNvbWUuaHRtbCcsXG4gICAgICAgICAgICBsaW5rOiBsaW5rXG4gICAgICAgIH07XG5cbiAgICAgICAgcmV0dXJuIGRpcmVjdGl2ZTtcbiAgICB9XG5cbiAgICAvLyBsaW5rLiRpbmplY3QgPSBbJ3Njb3BlJ107XG5cbiAgICBmdW5jdGlvbiBsaW5rKHNjb3BlKSB7XG4gICAgICAgIHNjb3BlLmluY29tZVNvdXJjZXMgPSB7XG4gICAgICAgICAgICB3b3JrOiB7XG4gICAgICAgICAgICAgICAgdmF1bGU6J3dvcmsnLFxuICAgICAgICAgICAgICAgIGxhYmVsOiAnRWFybmluZ3MgZnJvbSB3b3JrJyxcbiAgICAgICAgICAgICAgICBmcmVxdWVuY3k6IFsnd2Vla2x5JywgJ2Jpd2Vla2x5JywgJzJ4IG1vbnRoJywgJ21vbnRobHknXSxcbiAgICAgICAgICAgICAgICBhbm5vdGF0aW9uOiB7XG4gICAgICAgICAgICAgICAgICAgIGNoaWxkOiAnQSBjaGlsZCBoYXMgYSBqb2Igd2hlcmUgdGhleSBlYXJuIHNhbGFyeSBvciB3YWdlcyAnLFxuICAgICAgICAgICAgICAgICAgICBvdGhlck1lbWJlcjogJycsXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNvY2lhbFNlY3VyaXR5OiB7XG4gICAgICAgICAgICAgICAgdmF1bGU6J3NvY2lhbFNlY3VyaXR5JyxcbiAgICAgICAgICAgICAgICBsYWJlbDogJ1NvY2lhbCBTZWN1cml0eSBEaXNhYmlsaXR5IFBheW1lbnRzIG9yIFN1cnZpdm9y4oCZcyBCZW5lZml0cyAnLFxuICAgICAgICAgICAgICAgIGZyZXF1ZW5jeTogWydtb250aGx5J10sXG4gICAgICAgICAgICAgICAgYW5ub3RhdGlvbjoge1xuICAgICAgICAgICAgICAgICAgICBjaGlsZDogJ0EgY2hpbGQgaXMgYmxpbmQgb3IgZGlzYWJsZWQgYW5kIHJlY2VpdmVzIFNvY2lhbCBTZWN1cml0eSBiZW5lZml0cy4gQSBwYXJlbnQgaXMgZGlzYWJsZWQsIHJldGlyZWQsIG9yIGRlY2Vhc2VkLCBhbmQgdGhlaXIgY2hpbGQgcmVjZWl2ZXMgc29jaWFsIHNlY3VyaXR5IGJlbmVmaXRzJyxcbiAgICAgICAgICAgICAgICAgICAgb3RoZXJNZW1iZXI6ICcnLFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBvdGhlclBlcnNvbjoge1xuICAgICAgICAgICAgICAgIHZhdWxlOidvdGhlclBlcnNvbicsXG4gICAgICAgICAgICAgICAgbGFiZWw6ICdJbmNvbWUgZnJvbSBwZXJzb25zIG91dHNpZGUgdGhlIGhvdXNlaG9sZCcsXG4gICAgICAgICAgICAgICAgZnJlcXVlbmN5OiBbJ3dlZWtseScsICdiaXdlZWtseScsICcyeCBtb250aCcsICdtb250aGx5J10sXG4gICAgICAgICAgICAgICAgYW5ub3RhdGlvbjoge1xuICAgICAgICAgICAgICAgICAgICBjaGlsZDogJ0EgZnJpZW5kIG9yIGV4dGVuZGVkIGZhbWlseSBtZW1iZXIgcmVndWxhcmx5IGdpdmVzIGEgY2hpbGQgc3BlbmRpbmcgbW9uZXknLFxuICAgICAgICAgICAgICAgICAgICBvdGhlck1lbWJlcjogJycsXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG90aGVyU291cmNlOiB7XG4gICAgICAgICAgICAgICAgdmF1bGU6J290aGVyU291cmNlJyxcbiAgICAgICAgICAgICAgICBsYWJlbDogJ0luY29tZSBmcm9tIGFueSBvdGhlciBzb3VyY2UnLFxuICAgICAgICAgICAgICAgIGZyZXF1ZW5jeTogWyd3ZWVrbHknLCAnYml3ZWVrbHknLCAnMnggbW9udGgnLCAnbW9udGhseSddLFxuICAgICAgICAgICAgICAgIGFubm90YXRpb246IHtcbiAgICAgICAgICAgICAgICAgICAgY2hpbGQ6ICdBIGNoaWxkIHJlY2VpdmVzIGluY29tZSBmcm9tIGEgcHJpdmF0ZSBwZW5zaW9uIGZ1bmQsIGFubnVpdHksIG9yIHRydXN0JyxcbiAgICAgICAgICAgICAgICAgICAgb3RoZXJNZW1iZXI6ICcnLFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICBpZiAoc2NvcGUubWVtYmVyLmluY29tZVNvdXJjZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICBzY29wZS5tZW1iZXIuaW5jb21lU291cmNlcyA9IFtdO1xuICAgICAgICAgICAgT2JqZWN0LmtleXMoc2NvcGUuaW5jb21lU291cmNlcykuZm9yRWFjaChmdW5jdGlvbihpbmNvbWVTb3VyY2UpIHtcbiAgICAgICAgICAgICAgICBzY29wZS5tZW1iZXIuaW5jb21lU291cmNlcy5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogaW5jb21lU291cmNlLFxuICAgICAgICAgICAgICAgICAgICBhbW91bnQ6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIGZyZXF1ZW5jeTogbnVsbFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc29sZS5sb2coc2NvcGUubWVtYmVyKTtcbiAgICB9XG5cbn0pKCk7XG4iLCIoZnVuY3Rpb24oKSB7XG5cbiAgICBhbmd1bGFyXG4gICAgICAgIC5tb2R1bGUoJ2VhdENoYWxsZW5nZUFwcCcpXG4gICAgICAgIC5kaXJlY3RpdmUoJ3llc05vSW5wdXQnLCB5ZXNOb0lucHV0KTtcblxuICAgIGZ1bmN0aW9uIHllc05vSW5wdXQgKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc2NvcGU6IHtcbiAgICAgICAgICAgICAgICBtb2RlbDogJz0nXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcmVzdHJpY3Q6ICdBJyxcbiAgICAgICAgICAgIHJlcGxhY2U6IHRydWUsXG4gICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy4uL3ZpZXdzL3llc25vLmh0bWwnLFxuICAgICAgICB9O1xuICAgIH1cblxufSkoKTtcbiIsIihmdW5jdGlvbigpIHtcbiAgICBhbmd1bGFyXG4gICAgICAgIC5tb2R1bGUoJ2VhdENoYWxsZW5nZUFwcCcpXG4gICAgICAgIC5zZXJ2aWNlKCdIb3VzZWhvbGQnLCBob3VzZWhvbGRTZXJ2aWNlKTtcblxuICAgIGhvdXNlaG9sZFNlcnZpY2UuJGluamVjdCA9IFsnJGh0dHAnXTtcblxuICAgIGZ1bmN0aW9uIGhvdXNlaG9sZFNlcnZpY2UoJGh0dHApIHtcbiAgICAgICAgdGhpcy5nZXQgPSBnZXQ7XG4gICAgICAgIHRoaXMuc2F2ZSA9IHNhdmU7XG4gICAgICAgIHRoaXMuY2xlYXIgPSBjbGVhcjtcblxuXG4gICAgICAgIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cblxuICAgICAgICB2YXIgUGVyc29uID0ge1xuICAgICAgICAgICAgaW5pdDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5pbmNvbWVTb3VyY2VDb3VudCA9IDA7XG4gICAgICAgICAgICAgICAgdGhpcy5pbmNvbWVTb3VyY2VzID0gW107XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICBpbmNyZW1lbnRJbmNvbWVTb3VyY2VzOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmluY29tZVNvdXJjZUNvdW50Kys7XG4gICAgICAgICAgICAgICAgd2hpbGUgKHRoaXMuaW5jb21lU291cmNlQ291bnQgPiB0aGlzLmluY29tZVNvdXJjZXMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaW5jb21lU291cmNlcy5wdXNoKHt9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgdmFyIEhvdXNlaG9sZCA9IHtcbiAgICAgICAgICAgIGluaXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmNoaWxkcmVuID0gW107XG4gICAgICAgICAgICAgICAgdGhpcy5jaGlsZENvdW50ID0gMDtcbiAgICAgICAgICAgICAgICB0aGlzLmluY3JlbWVudENoaWxkQ291bnQoKTtcblxuICAgICAgICAgICAgICAgIHRoaXMub3RoZXJNZW1iZXJzID0gW107XG4gICAgICAgICAgICAgICAgdGhpcy5vdGhlck1lbWJlcnNDb3VudCA9IDA7XG4gICAgICAgICAgICAgICAgdGhpcy5pbmNyZW1lbnRPdGhlck1lbWJlcnNDb3VudCgpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGluY3JlbWVudENoaWxkQ291bnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHRoaXMuY2hpbGRDb3VudCsrO1xuICAgICAgICAgICAgICAgIHdoaWxlICh0aGlzLmNoaWxkQ291bnQgPiB0aGlzLmNoaWxkcmVuLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgbmV3Q2hpbGQgPSBPYmplY3QuY3JlYXRlKFBlcnNvbik7XG4gICAgICAgICAgICAgICAgICAgIG5ld0NoaWxkLmluaXQoKTtcbiAgICAgICAgICAgICAgICAgICAgbmV3Q2hpbGQuaXNDaGlsZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2hpbGRyZW4ucHVzaChuZXdDaGlsZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGluY3JlbWVudE90aGVyTWVtYmVyc0NvdW50OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICB0aGlzLm90aGVyTWVtYmVyc0NvdW50Kys7XG4gICAgICAgICAgICAgICAgd2hpbGUgKHRoaXMub3RoZXJNZW1iZXJzQ291bnQgPiB0aGlzLm90aGVyTWVtYmVycy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIG5ld01lbWJlciA9IE9iamVjdC5jcmVhdGUoUGVyc29uKTtcbiAgICAgICAgICAgICAgICAgICAgbmV3TWVtYmVyLmluaXQoKTtcbiAgICAgICAgICAgICAgICAgICAgbmV3TWVtYmVyLmlzQ2hpbGQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5vdGhlck1lbWJlcnMucHVzaChuZXdNZW1iZXIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICB9O1xuXG4gICAgICAgIHZhciBob3VzZWhvbGQ7XG5cbiAgICAgICAgZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgICAgICAgaWYgKGhvdXNlaG9sZCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBob3VzZWhvbGQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgLy9UT0RPOiBpZiB0aGVyZSdzIGEgdXNlcmlkLCByZXR1cm4gdGhlIGhvdXNlaG9sZCBhc3NvY2lhdGVkIHdpdGggaXRcbiAgICAgICAgICAgIC8vIGlmICh1c2VyaWQpIHtcbiAgICAgICAgICAgIC8vICAgICAvLyBUT0RPOiBhZGQgZXJyb3IgaGFuZGxpbmdcbiAgICAgICAgICAgIC8vICAgICAkaHR0cC5nZXQoJy9ob3VzZWhvbGQnKS50aGVuKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICAgIC8vICAgICAgICAgcmV0dXJuIGhvdXNlaG9sZCA9IGRhdGE7XG4gICAgICAgICAgICAvLyAgICAgfSk7XG4gICAgICAgICAgICAvLyB9IGVsc2Uge1xuICAgICAgICAgICAgLy8gICAgIC8vIGNyZWF0ZSBhIG5ldyBob3VzZWhvbGQgaWYgb25lIGRvZXNuJ3QgZXhpc3RcbiAgICAgICAgICAgICAgICBob3VzZWhvbGQgPSBPYmplY3QuY3JlYXRlKEhvdXNlaG9sZCk7XG4gICAgICAgICAgICAgICAgaG91c2Vob2xkLmluaXQoKTtcbiAgICAgICAgICAgIC8vIH1cblxuICAgICAgICAgICAgcmV0dXJuIGhvdXNlaG9sZDtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIHNhdmUoKSB7XG4gICAgICAgICAgICAvLyBUT0RPOiBoYW5kbGUgZXJyb3JzXG4gICAgICAgICAgICByZXR1cm4gJGh0dHAucG9zdCgnL2hvdXNlaG9sZCcsIGhvdXNlaG9sZCk7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBjbGVhciAoKSB7XG4gICAgICAgICAgICB2YXIgaG91c2Vob2xkID0ge307XG4gICAgICAgICAgICByZXR1cm4gaG91c2Vob2xkO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG59KSgpO1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
