!function(){function e(e,t){function n(e,t){t.otherwise("/"),e.state("main",{url:"/",templateUrl:"../views/main.html",controller:"mainController"}).state("styleguide",{url:"/styleguide",templateUrl:"../views/styleguide.html",controller:"mainController"})}n(e,t)}angular.module("eatChallengeApp",["ngMaterial","ui.router"]).config(e),e.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){function e(){return{scope:{member:"&"},restrict:"A",replace:!0,templateUrl:"../views/income.html"}}angular.module("eatChallengeApp").directive("incomeQuestions",e)}(),function(){function e(e,t,n){n.studentStatuses=["in school","home schooled","some other status"];var o={init:function(){this.incomeSourceCount=0,this.incomeSources=[]},incrementIncomeSources:function(){for(this.incomeSourceCount++;this.incomeSourceCount>this.incomeSources.length;)this.incomeSources.push({})}},i={init:function(){this.children=[],this.childCount=0,this.incrementChildCount(),this.otherMembers=[],this.otherMembersCount=0,this.incrementOtherMembersCount()},incrementChildCount:function(){for(this.childCount++;this.childCount>this.children.length;){var e=Object.create(o);e.init(),this.children.push(e)}},incrementOtherMembersCount:function(){for(this.otherMembersCount++;this.otherMembersCount>this.otherMembers.length;){var e=Object.create(o);e.init(),this.otherMembers.push(e)}}},r=Object.create(i);r.init(),n.household=r,n.showConfirm=function(t){var o=e.confirm().title("Would you like to delete this entry?").textContent("The data you have entered about this child will be removed").ariaLabel("delete child").targetEvent(t).ok("Yes").cancel("No");e.show(o).then(function(){n.status="You decided to get rid of your debt."},function(){n.status="You decided to keep your debt."})}}angular.module("eatChallengeApp").controller("mainController",e),e.$inject=["$mdDialog","$mdMedia","$scope"]}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsImRpcmVjdGl2ZXMvaW5jb21lLmpzIiwiY29udHJvbGxlcnMvbWFpbi5qcyJdLCJuYW1lcyI6WyJyb3V0ZXJDb25maWciLCIkc3RhdGVQcm92aWRlciIsIiR1cmxSb3V0ZXJQcm92aWRlciIsInJvdXRlciIsIm90aGVyd2lzZSIsInN0YXRlIiwidXJsIiwidGVtcGxhdGVVcmwiLCJjb250cm9sbGVyIiwiYW5ndWxhciIsIm1vZHVsZSIsImNvbmZpZyIsIiRpbmplY3QiLCJpbmNvbWVEaXJlY3RpdmUiLCJzY29wZSIsIm1lbWJlciIsInJlc3RyaWN0IiwicmVwbGFjZSIsImRpcmVjdGl2ZSIsIm1haW5Db250cm9sbGVyIiwiJG1kRGlhbG9nIiwiJG1kTWVkaWEiLCIkc2NvcGUiLCJzdHVkZW50U3RhdHVzZXMiLCJQZXJzb24iLCJpbml0IiwidGhpcyIsImluY29tZVNvdXJjZUNvdW50IiwiaW5jb21lU291cmNlcyIsImluY3JlbWVudEluY29tZVNvdXJjZXMiLCJsZW5ndGgiLCJwdXNoIiwiSG91c2Vob2xkIiwiY2hpbGRyZW4iLCJjaGlsZENvdW50IiwiaW5jcmVtZW50Q2hpbGRDb3VudCIsIm90aGVyTWVtYmVycyIsIm90aGVyTWVtYmVyc0NvdW50IiwiaW5jcmVtZW50T3RoZXJNZW1iZXJzQ291bnQiLCJuZXdDaGlsZCIsIk9iamVjdCIsImNyZWF0ZSIsIm5ld01lbWJlciIsImhvdXNlaG9sZCIsInNob3dDb25maXJtIiwiZXYiLCJjb25maXJtIiwidGl0bGUiLCJ0ZXh0Q29udGVudCIsImFyaWFMYWJlbCIsInRhcmdldEV2ZW50Iiwib2siLCJjYW5jZWwiLCJzaG93IiwidGhlbiIsInN0YXR1cyJdLCJtYXBwaW5ncyI6IkNBQUEsV0FRQSxRQUFBQSxHQUFBQyxFQUFBQyxHQUtBLFFBQUFDLEdBQUFGLEVBQUFDLEdBQ0FBLEVBQUFFLFVBQUEsS0FFQUgsRUFDQUksTUFBQSxRQUNBQyxJQUFBLElBQ0FDLFlBQUEscUJBQ0FDLFdBQUEsbUJBRUFILE1BQUEsY0FDQUMsSUFBQSxjQUNBQyxZQUFBLDJCQUNBQyxXQUFBLG1CQWZBTCxFQUFBRixFQUFBQyxHQVJBTyxRQUNBQyxPQUFBLG1CQUFBLGFBQUEsY0FDQUMsT0FBQVgsR0FFQUEsRUFBQVksU0FBQSxpQkFBQSx5QkNOQSxXQVFBLFFBQUFDLEtBQ0EsT0FDQUMsT0FDQUMsT0FBQSxLQUVBQyxTQUFBLElBQ0FDLFNBQUEsRUFDQVYsWUFBQSx3QkFiQUUsUUFDQUMsT0FBQSxtQkFDQVEsVUFBQSxrQkFBQUwsTUNKQSxXQVFBLFFBQUFNLEdBQUFDLEVBQUFDLEVBQUFDLEdBQ0FBLEVBQUFDLGlCQUFBLFlBQUEsZ0JBQUEsb0JBRUEsSUFBQUMsSUFDQUMsS0FBQSxXQUNBQyxLQUFBQyxrQkFBQSxFQUNBRCxLQUFBRSxrQkFHQUMsdUJBQUEsV0FFQSxJQURBSCxLQUFBQyxvQkFDQUQsS0FBQUMsa0JBQUFELEtBQUFFLGNBQUFFLFFBQ0FKLEtBQUFFLGNBQUFHLFdBTUFDLEdBQ0FQLEtBQUEsV0FDQUMsS0FBQU8sWUFDQVAsS0FBQVEsV0FBQSxFQUNBUixLQUFBUyxzQkFFQVQsS0FBQVUsZ0JBQ0FWLEtBQUFXLGtCQUFBLEVBQ0FYLEtBQUFZLDhCQUdBSCxvQkFBQSxXQUVBLElBREFULEtBQUFRLGFBQ0FSLEtBQUFRLFdBQUFSLEtBQUFPLFNBQUFILFFBQUEsQ0FDQSxHQUFBUyxHQUFBQyxPQUFBQyxPQUFBakIsRUFDQWUsR0FBQWQsT0FDQUMsS0FBQU8sU0FBQUYsS0FBQVEsS0FJQUQsMkJBQUEsV0FFQSxJQURBWixLQUFBVyxvQkFDQVgsS0FBQVcsa0JBQUFYLEtBQUFVLGFBQUFOLFFBQUEsQ0FDQSxHQUFBWSxHQUFBRixPQUFBQyxPQUFBakIsRUFDQWtCLEdBQUFqQixPQUNBQyxLQUFBVSxhQUFBTCxLQUFBVyxNQU9BQyxFQUFBSCxPQUFBQyxPQUFBVCxFQUNBVyxHQUFBbEIsT0FFQUgsRUFBQXFCLFVBQUFBLEVBRUFyQixFQUFBc0IsWUFBQSxTQUFBQyxHQUVBLEdBQUFDLEdBQUExQixFQUFBMEIsVUFDQUMsTUFBQSx3Q0FDQUMsWUFBQSw4REFDQUMsVUFBQSxnQkFDQUMsWUFBQUwsR0FDQU0sR0FBQSxPQUNBQyxPQUFBLEtBQ0FoQyxHQUFBaUMsS0FBQVAsR0FBQVEsS0FBQSxXQUNBaEMsRUFBQWlDLE9BQUEsd0NBQ0EsV0FDQWpDLEVBQUFpQyxPQUFBLG9DQXpFQTlDLFFBQ0FDLE9BQUEsbUJBQ0FGLFdBQUEsaUJBQUFXLEdBRUFBLEVBQUFQLFNBQUEsWUFBQSxXQUFBIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe1xuICBcbiAgYW5ndWxhclxuICAubW9kdWxlKFwiZWF0Q2hhbGxlbmdlQXBwXCIsWyduZ01hdGVyaWFsJywndWkucm91dGVyJ10pXG4gIC5jb25maWcocm91dGVyQ29uZmlnKTtcbiAgXG4gIHJvdXRlckNvbmZpZy4kaW5qZWN0ID0gWyckc3RhdGVQcm92aWRlcicsICckdXJsUm91dGVyUHJvdmlkZXInXTtcbiAgXG4gIGZ1bmN0aW9uIHJvdXRlckNvbmZpZyAoJHN0YXRlUHJvdmlkZXIsICR1cmxSb3V0ZXJQcm92aWRlcil7XG5cbiAgICByb3V0ZXIoJHN0YXRlUHJvdmlkZXIsICR1cmxSb3V0ZXJQcm92aWRlcik7XG5cbiAgICAvLy8vLy8vLy8vXG4gICAgZnVuY3Rpb24gcm91dGVyKCRzdGF0ZVByb3ZpZGVyLCAkdXJsUm91dGVyUHJvdmlkZXIpIHtcbiAgICAgICR1cmxSb3V0ZXJQcm92aWRlci5vdGhlcndpc2UoJy8nKTtcbiAgICAgIFxuICAgICAgJHN0YXRlUHJvdmlkZXJcbiAgICAgIC5zdGF0ZSgnbWFpbicsIHtcbiAgICAgICAgdXJsOiAnLycsXG4gICAgICAgIHRlbXBsYXRlVXJsOiAnLi4vdmlld3MvbWFpbi5odG1sJyxcbiAgICAgICAgY29udHJvbGxlcjogJ21haW5Db250cm9sbGVyJ1xuICAgICAgfSlcbiAgICAgIC5zdGF0ZSgnc3R5bGVndWlkZScsIHtcbiAgICAgICAgdXJsOiAnL3N0eWxlZ3VpZGUnLFxuICAgICAgICB0ZW1wbGF0ZVVybDogJy4uL3ZpZXdzL3N0eWxlZ3VpZGUuaHRtbCcsXG4gICAgICAgIGNvbnRyb2xsZXI6ICdtYWluQ29udHJvbGxlcidcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG5cblxufSkoKTtcbiIsIihmdW5jdGlvbigpe1xuXG4gIGFuZ3VsYXJcbiAgICAgIC5tb2R1bGUoJ2VhdENoYWxsZW5nZUFwcCcpXG4gICAgICAuZGlyZWN0aXZlKCdpbmNvbWVRdWVzdGlvbnMnLCBpbmNvbWVEaXJlY3RpdmUpO1xuXG4gICAgICAvLyBpbmNvbWVEaXJlY3RpdmUuJGluamVjdCA9IFsnJG1kRGlhbG9nJywgJyRtZE1lZGlhJywgJyRzY29wZSddO1xuXG4gICAgICBmdW5jdGlvbiBpbmNvbWVEaXJlY3RpdmUgKCkgeyAgICAgICAgICAgIFxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHNjb3BlOiB7XG4gICAgICAgICAgICBtZW1iZXI6IFwiJlwiXG4gICAgICAgICAgfSxcbiAgICAgICAgICByZXN0cmljdDogJ0EnLFxuICAgICAgICAgIHJlcGxhY2U6IHRydWUsXG4gICAgICAgICAgdGVtcGxhdGVVcmw6ICcuLi92aWV3cy9pbmNvbWUuaHRtbCcsXG4gICAgICAgIH07XG4gICAgICB9XG5cbn0pKCk7XG4iLCIoZnVuY3Rpb24oKXtcblxuYW5ndWxhclxuICAgIC5tb2R1bGUoJ2VhdENoYWxsZW5nZUFwcCcpXG4gICAgLmNvbnRyb2xsZXIoJ21haW5Db250cm9sbGVyJywgbWFpbkNvbnRyb2xsZXIpO1xuXG4gICAgbWFpbkNvbnRyb2xsZXIuJGluamVjdCA9IFsnJG1kRGlhbG9nJywgJyRtZE1lZGlhJywgJyRzY29wZSddO1xuXG4gICAgZnVuY3Rpb24gbWFpbkNvbnRyb2xsZXIgKCRtZERpYWxvZywgJG1kTWVkaWEsICRzY29wZSkgeyAgICAgICAgICAgIFxuICAgICAgJHNjb3BlLnN0dWRlbnRTdGF0dXNlcyA9IFsnaW4gc2Nob29sJywgJ2hvbWUgc2Nob29sZWQnLCAnc29tZSBvdGhlciBzdGF0dXMnXTtcbiAgICAgIC8vIENsYXNzZXNcbiAgICAgIHZhciBQZXJzb24gPSB7XG4gICAgICAgIGluaXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHRoaXMuaW5jb21lU291cmNlQ291bnQ9IDA7XG4gICAgICAgICAgdGhpcy5pbmNvbWVTb3VyY2VzPSBbXTtcbiAgICAgICAgfSxcblxuICAgICAgICBpbmNyZW1lbnRJbmNvbWVTb3VyY2VzOiBmdW5jdGlvbigpe1xuICAgICAgICAgIHRoaXMuaW5jb21lU291cmNlQ291bnQrKztcbiAgICAgICAgICB3aGlsZSh0aGlzLmluY29tZVNvdXJjZUNvdW50ID4gdGhpcy5pbmNvbWVTb3VyY2VzLmxlbmd0aCkge1xuICAgICAgICAgICAgdGhpcy5pbmNvbWVTb3VyY2VzLnB1c2goe30pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfTtcblxuXG4gICAgICB2YXIgSG91c2Vob2xkID0ge1xuICAgICAgICBpbml0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgdGhpcy5jaGlsZHJlbiA9IFtdO1xuICAgICAgICAgIHRoaXMuY2hpbGRDb3VudCA9IDA7XG4gICAgICAgICAgdGhpcy5pbmNyZW1lbnRDaGlsZENvdW50KCk7XG5cbiAgICAgICAgICB0aGlzLm90aGVyTWVtYmVycyA9IFtdO1xuICAgICAgICAgIHRoaXMub3RoZXJNZW1iZXJzQ291bnQgPSAwO1xuICAgICAgICAgIHRoaXMuaW5jcmVtZW50T3RoZXJNZW1iZXJzQ291bnQoKTtcbiAgICAgICAgfSxcblxuICAgICAgICBpbmNyZW1lbnRDaGlsZENvdW50OiBmdW5jdGlvbigpe1xuICAgICAgICAgIHRoaXMuY2hpbGRDb3VudCsrO1xuICAgICAgICAgIHdoaWxlICh0aGlzLmNoaWxkQ291bnQgPiB0aGlzLmNoaWxkcmVuLmxlbmd0aCkge1xuICAgICAgICAgICAgdmFyIG5ld0NoaWxkID0gT2JqZWN0LmNyZWF0ZShQZXJzb24pXG4gICAgICAgICAgICBuZXdDaGlsZC5pbml0KCk7XG4gICAgICAgICAgICB0aGlzLmNoaWxkcmVuLnB1c2gobmV3Q2hpbGQpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICBpbmNyZW1lbnRPdGhlck1lbWJlcnNDb3VudDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgdGhpcy5vdGhlck1lbWJlcnNDb3VudCsrO1xuICAgICAgICAgIHdoaWxlICh0aGlzLm90aGVyTWVtYmVyc0NvdW50ID4gdGhpcy5vdGhlck1lbWJlcnMubGVuZ3RoKSB7XG4gICAgICAgICAgICB2YXIgbmV3TWVtYmVyID0gT2JqZWN0LmNyZWF0ZShQZXJzb24pO1xuICAgICAgICAgICAgbmV3TWVtYmVyLmluaXQoKTtcbiAgICAgICAgICAgIHRoaXMub3RoZXJNZW1iZXJzLnB1c2gobmV3TWVtYmVyKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgfVxuXG5cbiAgICAgIHZhciBob3VzZWhvbGQgPSBPYmplY3QuY3JlYXRlKEhvdXNlaG9sZClcbiAgICAgIGhvdXNlaG9sZC5pbml0KCk7XG4gICAgICAvLyBUT0RPOiByZXBsYWNlIHNjb3BlIHdpdGggdm1cbiAgICAgICRzY29wZS5ob3VzZWhvbGQgPSBob3VzZWhvbGRcblxuICAgICAgJHNjb3BlLnNob3dDb25maXJtID0gZnVuY3Rpb24oZXYpIHtcbiAgICAgICAgLy8gQXBwZW5kaW5nIGRpYWxvZyB0byBkb2N1bWVudC5ib2R5IHRvIGNvdmVyIHNpZGVuYXYgaW4gZG9jcyBhcHBcbiAgICAgICAgdmFyIGNvbmZpcm0gPSAkbWREaWFsb2cuY29uZmlybSgpXG4gICAgICAgICAgLnRpdGxlKCdXb3VsZCB5b3UgbGlrZSB0byBkZWxldGUgdGhpcyBlbnRyeT8nKVxuICAgICAgICAgIC50ZXh0Q29udGVudCgnVGhlIGRhdGEgeW91IGhhdmUgZW50ZXJlZCBhYm91dCB0aGlzIGNoaWxkIHdpbGwgYmUgcmVtb3ZlZCcpXG4gICAgICAgICAgLmFyaWFMYWJlbCgnZGVsZXRlIGNoaWxkJylcbiAgICAgICAgICAudGFyZ2V0RXZlbnQoZXYpXG4gICAgICAgICAgLm9rKCdZZXMnKVxuICAgICAgICAgIC5jYW5jZWwoJ05vJyk7XG4gICAgICAkbWREaWFsb2cuc2hvdyhjb25maXJtKS50aGVuKGZ1bmN0aW9uKCkge1xuICAgICAgJHNjb3BlLnN0YXR1cyA9ICdZb3UgZGVjaWRlZCB0byBnZXQgcmlkIG9mIHlvdXIgZGVidC4nO1xuICAgIH0sIGZ1bmN0aW9uKCkge1xuICAgICAgJHNjb3BlLnN0YXR1cyA9ICdZb3UgZGVjaWRlZCB0byBrZWVwIHlvdXIgZGVidC4nO1xuICAgIH0pO1xuICB9O1xuXG4gICAgfTtcblxufSkoKTtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
