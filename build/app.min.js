(function() {
    'use strict';

    angular
    .module('eatChallengeApp',['ngCookies', 'ngCsv','ngMaterial', 'ngSanitize', 'ui.router'])
    .config(routerConfig)
    .config(materialDesignThemer)
    .config(errorDecorator)
    .run(scroller);
    ///////////////////////////////////

    //Show source maps in errors
    errorDecorator.$inject = ['$provide'];
    function errorDecorator($provide) {
        $provide.decorator('$exceptionHandler', decorateError);
        decorateError.$inject = ['$delegate'];
        function decorateError($delegate) {
            return function(exception, cause) {
                $delegate(exception, cause);
                throw exception;
            };
        }
    }

    //Routing enhancements
    scroller.$inject = ['$rootScope'];
    function scroller($rootScope) {
        // scroll to the top on page transition
        $rootScope.$on('$stateChangeSuccess', function() {
            document.body.scrollTop = document.documentElement.scrollTop = 0;
        });

        // Keep track of history
        $rootScope.$on('$stateChangeSuccess', function(ev, to, toParams, from, fromParams) {
            $rootScope.previousState = from.name;
            $rootScope.currentState = to.name;
        });
    }

    //Color themes for buttons
    materialDesignThemer.$inject = ['$mdThemingProvider'];
    function materialDesignThemer($mdThemingProvider) {
        $mdThemingProvider.theme('default').primaryPalette('teal')
                          .backgroundPalette('brown', {'default': '50'})
                          .foregroundPalette[3] = 'rgba(0,0,0,0.67)';
    }

    // UI router
    routerConfig.$inject = ['$stateProvider', '$urlRouterProvider'];
    function routerConfig ($stateProvider, $urlRouterProvider) {

        router($stateProvider, $urlRouterProvider);
        //////////

        function router($stateProvider, $urlRouterProvider) {
            $urlRouterProvider.otherwise('/');

            $stateProvider
            .state('start', {
                url: '/',
                views:{
                    // 'user-controls': {
                    //     templateUrl: '../views/user-controls.html',
                    //     controller: 'userControlsController'
                    // },
                    // 'side-nav': {
                    //     templateUrl: '../views/sideNav.html',
                    //     controller: 'sideNavController'
                    // },
                    'main': {
                        templateUrl: '../views/start.html',
                        controller: 'mainController'
                    }
                }
            })
            .state('children', {
                url: '/children',
                views:{
                    'user-controls': {
                        templateUrl: '../views/user-controls.html',
                        controller: 'userControlsController'
                    },
                    //     'side-nav': {
                    //     templateUrl: '../views/sideNav.html',
                    //     controller: 'sideNavController'
                    // },
                    'main': {
                    templateUrl: '../views/children.html',
                    controller: 'mainController'
                }
                }
            })
            .state('childIncome', {
                url: '/childIncome',
                views:{
                    'user-controls': {
                        templateUrl: '../views/user-controls.html',
                        controller: 'userControlsController'
                    },
                    //     'side-nav': {
                    //     templateUrl: '../views/sideNav.html',
                    //     controller: 'sideNavController'
                    // },
                    'main': {
                    templateUrl: '../views/childIncome.html',
                    controller: 'mainController'
                }
                }
            })
            .state('household', {
                url: '/household',
                views:{
                    'user-controls': {
                        templateUrl: '../views/user-controls.html',
                        controller: 'userControlsController'
                    },
                    // 'side-nav': {
                    //     templateUrl: '../views/sideNav.html',
                    //     controller: 'sideNavController'
                    // },
                    'main': {
                        templateUrl: '../views/household.html',
                        controller: 'mainController'
                    }
                }
            })
            .state('householdIncome', {
                url: '/household-income',
                views:{
                    'user-controls': {
                        templateUrl: '../views/user-controls.html',
                        controller: 'userControlsController'
                    },
                    // 'side-nav': {
                    //     templateUrl: '../views/sideNav.html',
                    //     controller: 'sideNavController'
                    // },
                    'main': {
                        templateUrl: '../views/householdIncome.html',
                        controller: 'householdIncome'
                    }
                }
            })
            .state('disclosure', {
                url: '/disclosure',
                views:{
                    'user-controls': {
                        templateUrl: '../views/user-controls.html',
                        controller: 'userControlsController'
                    },
                    // 'side-nav': {
                    //     templateUrl: '../views/sideNav.html',
                    //     controller: 'sideNavController'
                    // },
                    'main': {
                        templateUrl: '../views/disclosure.html',
                        controller: 'mainController'
                    }
                }
            })
            .state('signature', {
                url: '/signature',
                views:{
                    'user-controls': {
                        templateUrl: '../views/user-controls.html',
                        controller: 'userControlsController'
                    },
                    //     'side-nav': {
                    //     templateUrl: '../views/sideNav.html',
                    //     controller: 'sideNavController'
                    // },
                    'main': {
                    templateUrl: '../views/signature.html',
                    controller: 'mainController'
                }
                }
            })
            .state('confirmation', {
                url: '/confirmation',
                views:{
                    // 'user-controls': {
                    //     templateUrl: '../views/user-controls.html',
                    //     controller: 'userControlsController'
                    // },
                    //     'side-nav': {
                    //     templateUrl: '../views/sideNav.html',
                    //     controller: 'sideNavController'
                    // },
                    'main': {
                    templateUrl: '../views/confirmation.html',
                    controller: 'mainController'
                }
                }
            })
            .state('export', {
                url: '/export',
                views: {
                    // 'user-controls': {
                    //     templateUrl: '../views/user-controls.html',
                    //     controller: 'userControlsController'
                    // },
                    // 'side-nav': {
                    //     templateUrl: '../views/sideNav.html',
                    //     controller: 'sideNavController'
                    // },
                    'main': {
                        templateUrl: '../views/export.html',
                        controller: 'exportController'
                    }
                }
            })
            .state('signup', {
                url: '/signup',
                views:{
                    'user-controls': {
                        templateUrl: '../views/user-controls.html',
                        controller: 'userControlsController'
                    },
                    // 'side-nav': {
                    //     templateUrl: '../views/sideNav.html',
                    //     controller: 'sideNavController'
                    // },
                    'main': {
                        templateUrl: '../views/signup.html',
                        controller: 'signupController'
                    }
                }

            })
            .state('login', {
                url: '/login',
                views:{
                    // 'user-controls': {
                    //     templateUrl: '../views/user-controls.html',
                    //     controller: 'userControlsController'
                    // },
                    // 'side-nav': {
                    //     templateUrl: '../views/sideNav.html',
                    //     controller: 'sideNavController'
                    // },
                    'main': {
                        templateUrl: '../views/login.html',
                        controller: 'loginController'
                    }
                }
            })
            .state('soFar', {
                url: '/so-far',
                views:{
                    'user-controls': {
                        templateUrl: '../views/user-controls.html',
                        controller: 'userControlsController'
                    },
                    //     'side-nav': {
                    //     templateUrl: '../views/sideNav.html',
                    //     controller: 'sideNavController'
                    // },
                    'main': {
                        templateUrl: '../views/soFar.html',
                        controller: 'soFarController'
                    }
                }
            })
            .state('saveAndExit', {
                url: '/save-and-exit',
                views:{
                    // 'user-controls': {
                    //     templateUrl: '../views/user-controls.html',
                    //     controller: 'userControlsController'
                    // },
                    //     'side-nav': {
                    //     templateUrl: '../views/sideNav.html',
                    //     controller: 'sideNavController'
                    // },
                    'main': {
                        templateUrl: '../views/save-and-exit.html',
                        controller: 'mainController'
                    }
                }
            });
        }
    }

})();

(function() {
    'use strict';

    angular
        .module('eatChallengeApp')
        .controller('exportController', exportController);

    exportController.$inject = ['$http', '$scope'];

    function exportController($http, $scope) {
        $http.get('/household/completed').then(function(response) {
            $scope.completedApplications = response.data;
        });
    }

})();

(function() {
    'use strict';

    angular
        .module('eatChallengeApp')
        .controller('householdIncome', householdIncome);

    householdIncome.$inject = [
        '$rootScope',
        '$scope',
        '$state',
        'Household',
        'Sections'
    ];

    function householdIncome ($rootScope, $scope, $state, Household, Sections, HouseholdIncome) {
        var vm = $scope;
        vm.navigateToNextSection = navigateToNextSection;

        var work = {
            categoryName: 'work',
            headline: 'Work Income',
            question: 'earn money through work',
            sources: [
                {
                    value:'work',
                    checkboxLabel: 'Work outside the home in a non-military capacity ',
                    shortLabel: 'Earnings from work',
                    frequency: ['weekly', 'every 2 weeks', 'twice a month', 'monthly'],
                    annotation: 'Please report gross income. This is the amount of income earned before any money is taken out for taxes or deductions. Include salary, wages, and cash bonuses.'
                },
                {
                    value:'selfEmployed',
                    shortLabel: 'Earnings from self employment',
                    checkboxLabel: 'Self-employed',
                    frequency: ['weekly', 'every 2 weeks', 'twice a month', 'monthly'],
                    annotation: 'For household members that are self-employed, report income from that work as a net amount. This is calculated by subtracting the total operating expenses of the business from its gross receipts or revenue.'

                },
                {
                    value:'onStrike',
                    checkboxLabel: 'On strike',
                    shortLabel: 'Strike Benefits',
                    frequency: ['weekly', 'every 2 weeks', '2x month', 'monthly'],
                    // annotation:
                },
                {
                    // TODO: add space for housing allowance per doc
                    value:'military',
                    checkboxLabel: 'In the U.S. military',
                    shortLabel: 'Basic pay and cash bonuses',
                    frequency: ['weekly', 'every 2 weeks', 'twice a month', 'monthly'],
                    annotation: 'Please do not include combat pay, FSSA, or private housing allowances.'
                }
            ]
        };

        var publicAssistance = {
            categoryName: 'publicAssistance',
            headline: 'Public Assistance',
            question: 'receive any public assistance benefits',
            sources:[
                {
                    value:'unemployment',
                    checkboxLabel: 'Unemployment benefits',
                    shortLabel: 'Unemployment benefits',
                    frequency: ['weekly', 'every 2 weeks', 'twice a month', 'monthly'],
                    // annotation: ''
                },
                {
                    value:'workersComp',
                    checkboxLabel: 'Worker’s compensation',
                    shortLabel: 'Worker’s compensation',
                    frequency: ['weekly', 'every 2 weeks', 'twice a month', 'monthly'],
                    // annotation: ''
                },
                {
                    value:'ssi',
                    checkboxLabel: 'Supplemental Security Income (SSI)',
                    shortLabel: 'Supplemental Security Income (SSI)',
                    frequency: ['weekly', 'every 2 weeks', 'twice a month', 'monthly'],
                    // annotation: ''
                },
                {
                    value:'cashAssistance',
                    checkboxLabel: 'Cash assistance from State or local government',
                    shortLabel: 'Cash assistance',
                    frequency: ['weekly', 'every 2 weeks', 'twice a month', 'monthly'],
                    annotation: 'This could include TANF or General Assistance money.'
                },
                {
                    value:'veteransBenefits',
                    checkboxLabel: 'Veteran’s benefits',
                    shortLabel: 'Veteran’s benefits',
                    frequency: ['weekly', 'every 2 weeks', 'twice a month', 'monthly'],
                    // annotation: 'This could include TANF or General Assistance money'
                }
            ]
        };

        var alimony = {
            categoryName: 'alimony',
            headline: 'Alimony',
            question: 'receive alimony payments',
            sources:[
                {
                    value: 'alimony',
                    checkboxLabel: 'alimony payments',
                    shortLabel: 'Alimony payment',
                    frequency: ['weekly', 'every 2 weeks', 'twice a month', 'monthly'],
                    annotation: 'If income is received from alimony, only court-ordered payments should be reported here. Informal but regular payments should be reported later as “other” income.'
                }
            ]
        };

        var childSupport = {
            categoryName: 'childSupport',
            headline: 'Child Support',
            question: 'receive any child support',
            sources: [
                {
                    value: 'childSupport',
                    checkboxLabel: 'any child support',
                    shortLabel: 'Child support payment',
                    frequency: ['weekly', 'every 2 weeks', 'twice a month', 'monthly'],
                    annotation: 'If income is received from child support, only court-ordered payments should be reported here. Informal but regular payments should be reported later as “other” income.'
                }
            ]
        };

        var retirement = {
            categoryName: 'retirement',
            headline: 'Pension and Retirement',
            question: 'receive any pension or retirement money',
            sources: [
                {
                    value: 'socialSecurity',
                    checkboxLabel: 'Social Security',
                    shortLabel: 'Social security',
                    frequency: ['weekly', 'every 2 weeks', 'twice a month', 'monthly'],
                    annotation: 'Please include railroad retirement and black lung benefits'
                },
                {
                    value: 'privatePension',
                    checkboxLabel: 'Private pensions or disability',
                    shortLabel: 'Private pensions or disability',
                    frequency: ['weekly', 'every 2 weeks', 'twice a month', 'monthly'],
                    // annotation: ''
                }
            ]
        };

        var otherIncome = {
            categoryName: 'otherIncome',
            headline: 'Other Income',
            question: 'recieve money through any other source',
            sources: [
                {
                    value: 'trusts',
                    checkboxLabel: 'Income from trusts or estates',
                    shortLabel: 'Income from trusts or estates',
                    frequency: ['weekly', 'every 2 weeks', 'twice a month', 'monthly'],
                    // annotation: ''
                },
                {
                    value: 'annuities',
                    checkboxLabel: 'Annuities',
                    shortLabel: 'Income from annuities',
                    frequency: ['weekly', 'every 2 weeks', 'twice a month', 'monthly'],
                    // annotation: ''
                },
                {
                    value: 'investment',
                    checkboxLabel: 'Investment income',
                    shortLabel: 'Investment income',
                    frequency: ['weekly', 'every 2 weeks', 'twice a month', 'monthly'],
                    // annotation: ''
                },
                {
                    value: 'interest',
                    checkboxLabel: 'Earned interest',
                    shortLabel: 'Earned interest',
                    frequency: ['weekly', 'every 2 weeks', 'twice a month', 'monthly'],
                    // annotation: ''
                },
                {
                    value: 'rentalIncome',
                    checkboxLabel: 'Rental income',
                    shortLabel: 'Rental income',
                    frequency: ['weekly', 'every 2 weeks', 'twice a month', 'monthly'],
                    // annotation: ''
                },
                {
                    value: 'otherCash',
                    checkboxLabel: 'Regular cash payments from outside household',
                    shortLabel: 'Regular cash payments from outside household',
                    frequency: ['weekly', 'every 2 weeks', 'twice a month', 'monthly'],
                    annotation: 'Such cash payments should include regular child support or alimony payments received by the household that are not court-ordered.'
                },
            ]
        };

        // TODO: duplicated with main.js. Share in a better way
        function navigateToNextSection() {
            Household.save();
            Sections.updateRequiredSections();
            Sections.navigateToNext();
        }

        vm.incomeCategories = [
                                work,
                                publicAssistance,
                                alimony,
                                childSupport,
                                retirement,
                                otherIncome
                              ];

    }

})();

(function() {
    'use strict';

    angular
      .module('eatChallengeApp')
      .controller('loginController', loginController);
    loginController.$inject = ['$scope', '$state', 'auth', 'Household', 'Sections'];
    function loginController($scope, $state, auth, Household, Sections) {
        var vm = $scope;
        var user = {};
        vm.submit = submit;
        vm.user = user;
        //////////////////////

        function submit() {
            // vm.disabled = true;

            auth
            .login(user.email, user.password)
            .then(successHandler, errorHandler);

            function successHandler(response) {
                // vm.disabled = false;
                vm.loginForm = {};
                vm.message = 'successfully logged in';
                $state.go('soFar');
            }

            function errorHandler(response) {
                vm.message = 'Something went wrong. Please try again';
                // vm.disabled = false;
            }

        }
    }

})();

(function() {
    'use strict';

    angular
        .module('eatChallengeApp')
        .controller('mainController', mainController);

    mainController.$inject = [
        '$http',
        '$interval',
        '$mdDialog',
        '$mdMedia',
        '$rootScope',
        '$scope',
        '$state',
        'Household',
        'Sections'
    ];

    function mainController ($http, $interval, $mdDialog, $mdMedia, $rootScope,
                             $scope, $state, Household, Sections) {
        /* jshint validthis: true */
        var vm = $scope;
        vm.schoolDistrict = 'Oakland Unified School District';

        // navigation
        vm.goBack = goBack;
        vm.navigateToNextSection = navigateToNextSection;
        vm.submitApplication = submitApplication;
        /////////////////////////////////////

        //New children and household members are created
        //by calling the server to make use of mongoose models
        function addChild(newVal) {
            if (newVal > $rootScope.household.children.length) {
                $http.get('/child').then(function(response) {
                    var newChild = response.data;
                    $rootScope.household.children.push(newChild);
                    // Recurse if necessary
                    addChild(newVal);
                });
            }
        }

        function addOtherMember(newVal) {
            if (newVal > $rootScope.household.otherMembers.length) {
                $http.get('/household-member').then(function(response) {
                    var newHouseholdMember = response.data;
                    newHouseholdMember = {};
                    $rootScope.household.otherMembers.push(newHouseholdMember);
                    // Recurse if necessary
                    addOtherMember(newVal);
                });
            }
        }

        function trimChildren(household) {
            // get rid of extra empty child obejcets created in process
            if (household.children.length > household.childCount) {
                household.children = household.children.slice(0, household.childCount);
            }
            return household;
        }

        function trimOtherMembers(household) {
            // get rid of extra empty otherMember obejcets created in process
            if (household.otherMembers.length > household.otherMembersCount) {
                household.otherMembers.slice(0, household.otherMembersCount);
            }
            return household;
        }

        function goBack() {
            Household.save();
            Sections.updateRequiredSections();
            Sections.goBack();
        }

        function navigateToNextSection() {
            Household.save();
            Sections.updateRequiredSections();
            Sections.navigateToNext();
        }

        function submitApplication() {
            trimChildren($rootScope.household);
            trimOtherMembers($rootScope.household);

            $rootScope.household.completed = true;
            Household.submit();
            Sections.updateRequiredSections();
            Sections.navigateToNext();
        }

        // Watchers
        $scope.$watch('household.childCount', addChild);
        $scope.$watch('household.otherMembersCount', addOtherMember);
    }

})();

(function() {
    'use strict';

    angular
        .module('eatChallengeApp')
        .controller('sideNavController', sideNavController);

    sideNavController.$inject = ['$scope', '$state', 'Sections'];

    function sideNavController ($scope, $state, Sections) {
        /* jshint validthis: true */
        var vm = $scope;

        vm.currentState = $state.$current.self.name;
        vm.sections = Sections.sections;
    }

})();

(function() {
    'use strict';

    angular
      .module('eatChallengeApp')
      .controller('signupController', signupController);
    signupController.$inject = ['$scope', 'auth', 'Sections'];

    function signupController($scope, auth, Sections) {
        console.log(auth.getUserStatus());
        var vm = $scope;
        var user = {};
        vm.submit = submit;
        vm.user = user;

        function submit() {
            vm.error = false;
            // TODO: add loading icon to UI when disabled === true
            vm.disabled = true;

            auth.signup(user.email, user.password)
            .then(successHandler, errorHandler);

            function successHandler() {
                vm.disabled = false;
                vm.signupForm = {}; //Reset form
                vm.message = 'successfully created an account';
                Sections.goBack();
            }

            function errorHandler(err) {
                console.log(err);
                vm.error = true;
                vm.message = 'Something went wrong. Please try again';
                vm.disabled = false;
                // vm.signupForm = {}

            }
        }
    }

})();

(function() {
    'use strict';

    angular
        .module('eatChallengeApp')
        .controller('soFarController', soFarController);

    soFarController.$inject = [
        '$http',
        '$interval',
        '$mdDialog',
        '$mdMedia',
        '$rootScope',
        '$scope',
        '$state',
        'Household',
        'Sections'
    ];

    function soFarController ($http, $interval, $mdDialog, $mdMedia, $rootScope,
                             $scope, $state, Household, Sections) {
        /* jshint validthis: true */
        var vm = $scope;
        vm.meansTest = Sections.meansTest;

        vm.childrenLabel = 'children';
        vm.adultsLabel = 'adults';

        vm.incomeEarnersCount = countEarners($rootScope.household);
        vm.incomeEstimate = estimateIncome($rootScope.household);

        // navigation
        vm.goBack = goBack;
        vm.navigateToNextSection = navigateToNextSection;

        /////////////////////////////////////

        function init() {
            if ($rootScope.household.children.length === 1) {
                vm.childrenLabel = 'child';
            }
            if ($rootScope.household.otherMembers.length === 1) {
                vm.adultsLabel = 'adult';
            }
        }

        init();

        

        function estimateIncome() {
            var frequencyMulitplier = {
                weekly: 52,
                'every 2 weeks': 26,
                'twice a month': 24,
                monthly: 12
            };

            function getTotalforSource(source) {
                return source.amount * frequencyMulitplier[source.frequency];
            }

            var estimatedAnnualIncome = 0;

            $rootScope.household.children.forEach(function(child) {
                if (child.earnsIncome) {
                    child.incomeSources.forEach(function(incomeSource) {
                        if (incomeSource.amount > 0) {
                            estimatedAnnualIncome += getTotalforSource(incomeSource);
                        }
                    });
                }
            });

            $rootScope.household.otherMembers.forEach(function(member) {
                if (!member.incomeCategory) {
                    return;
                }
                var incomeSource;
                for (var key in member.incomeCategory) {
                    // This value gets stashed in the same place
                    incomeSource = member.incomeCategory[key];
                    for (var k in incomeSource) {
                        if (k !== 'showCheckboxes') {
                            var source = incomeSource[k];
                            estimatedAnnualIncome += getTotalforSource(source);
                        }
                    }
                }
            });

            return Math.round(estimatedAnnualIncome);
        }

        function countEarners(household) {
            var earnersCount = 0;
            $rootScope.household.children.forEach(function(child) {
                if (child.earnsIncome) {
                    earnersCount++;
                }
            });

            $rootScope.household.otherMembers.forEach(function(member) {
                if (member.incomeCategory && Object.keys(member.incomeCategory) > 0) {
                    earnersCount++;
                }
            });

            return earnersCount;
        }

        function goBack() {
            Household.save();
            Sections.updateRequiredSections();
            Sections.goBack();
        }

        function navigateToNextSection() {
            Household.save();
            Sections.updateRequiredSections();
            Sections.navigateToNext();
        }
    }

})();

(function() {
    'use strict';

    angular
      .module('eatChallengeApp')
      .controller('userControlsController', userControlsController);
    userControlsController.$inject = ['$rootScope', '$scope', '$state', 'auth'];
    function userControlsController($rootScope, $scope, $state, auth) {
        var vm = $scope;
        vm.loggedIn = auth.getUserStatus();
        vm.logout = logout;
        vm.user = $rootScope.user;
        /////////////////////////
        function logout() {
            auth.logout();
            vm.loggedIn = auth.getUserStatus();
            $state.go('saveAndExit');
        }

        $rootScope.$watch('user', function() {
            vm.loggedIn = auth.getUserStatus();
            vm.user = $rootScope.user;
        });
    }

})();

(function() {
    'use strict';

    angular
        .module('eatChallengeApp')
        .directive('incomeQuestions', incomeDirective);

    function incomeDirective() {
        var directive = {
            scope: {
                member: '='
            },
            restrict: 'A',
            replace: true,
            templateUrl: '../views/income.html',
            link: link
        };

        return directive;
    }

    // link.$inject = ['scope'];

    function link(scope) {
        scope.incomeSources = {
            work: {
                vaule:'work',
                label: 'Earnings from work:',
                frequency: ['weekly', 'every 2 weeks', 'twice a month', 'monthly'],
                annotation: 'A child has a job where they earn salary or wages. Please report gross income. This is the amount of income earned before any money is taken out for taxes or deductions. Include salary, wages, and cash bonuses.',
            },
            socialSecurity: {
                vaule:'socialSecurity',
                label: 'Social Security Disability Payments or Survivor’s Benefits:',
                frequency: ['monthly'],
                // annotation: 'A child is blind or disabled and receives Social Security benefits.',
                // ' A parent is disabled, retired, or deceased, and their child receives social security benefits',

            },
            otherPerson: {
                vaule:'otherPerson',
                label: 'Income from persons outside the household:',
                frequency: ['weekly', 'every 2 weeks', 'twice a month', 'monthly'],
                annotation: 'A friend or extended family member regularly gives a child spending money.',
            },
            otherSource: {
                vaule:'otherSource',
                label: 'Income from any other source:',
                frequency: ['weekly', 'every 2 weeks', 'twice a month', 'monthly'],
                annotation: 'A child receives income from a private pension fund, annuity, or trust.',
            }
        };

        if (scope.member.incomeSources.length === 0) {
            scope.member.incomeSources = [];
            Object.keys(scope.incomeSources).forEach(function(incomeSource) {
                scope.member.incomeSources.push({
                    type: incomeSource,
                    amount: null,
                    frequency: null
                });
            });
        }
    }

})();

(function() {
    'use strict';

    angular
        .module('eatChallengeApp')
        .directive('yesNoInput', yesNoInput);

    function yesNoInput () {
        return {
            scope: {
                model: '='
            },
            restrict: 'A',
            replace: true,
            templateUrl: '../views/yesno.html',
        };
    }

})();

(function() {
    'use strict';

    angular
        .module('eatChallengeApp')
        .service('auth', AuthService);

    AuthService.$inject = ['$cookies', '$http', '$q', '$rootScope', '$state', 'Household'];

    function AuthService($cookies, $http, $q, $rootScope, $state, Household) {
        $rootScope.user = null;
        init();
        var service = {};
        service.isLoggedIn = isLoggedIn;
        service.getUserStatus = getUserStatus;
        service.signup = signup;
        service.login = login;
        service.logout = logout;
        service.init = init;

        return service;
        ///////////////////////////
        function init() {
            // Check for user on start
            var user = getCredentials();
            if (user) {
                $rootScope.user = user;
                Household.retrieveForUser(user);
            }

        }

        function isLoggedIn() {
            if ($rootScope.user) {
                return true;
            }
            return false;
        }

        function getUserStatus() {
            return $rootScope.user;
        }

        function signup(email, password) {
            return $http
                .post('/user/signup', {username: email, password: password})
                .then(successHandler, errorHandler);

            function successHandler(response) {
                setCredentials(response.data.user);
                Household.save();
            }

            function errorHandler(err) {
                console.log(err);
            }
        }

        function login(email, password) {
            var data = {
                username: email,
                password: password
            };

            return $http
                .post('/user/login', data)
                .then(successHandler, errorHandler);

            function successHandler(response) {
                setCredentials(response.data.user);
                Household.retrieveForUser(response.data.user);
            }

            function errorHandler(response, err) {
                console.log(err);
                clearCredentials();
            }
        }

        function logout() {
            return $http
                .get('user/logout')
                .then(successHandler, errorHandler);

            function successHandler() {
                clearCredentials();
                Household.clear();
            }

            function errorHandler() {
                clearCredentials();
                Household.clear();
            }
        }

        function setCredentials(user) {
            $rootScope.user = user;
            return $cookies.putObject('user', user);
        }

        function getCredentials() {
            return $cookies.getObject('user');
        }

        function clearCredentials() {
            $rootScope.user = null;
            return $cookies.remove('user');
        }
    }

})();

(function() {
    angular
        .module('eatChallengeApp')
        .service('Household', householdService);

    householdService.$inject = ['$http', '$rootScope'];

    function householdService($http, $rootScope) {
        // Todo: consider moving to server??
        var Household =  {
            childCount: null,
            children: [],
            otherMembersCount: null,
            otherMembers: [],
            completedApplication: false
        };

        $rootScope.household = angular.copy(Household);

        var service = {};
        service.retrieveForUser = retrieveForUser;
        service.save = save;
        service.clear = clear;
        service.submit = submit;

        return service;
        //////////////////////////////////

        function retrieveForUser(user) {
            $http.get('/household/' + user._id)
                .then(function(response) {
                    $rootScope.household = response.data;
                });
        }

        function save() {
            if (!$rootScope.user) {
                return;
            }
            $rootScope.household.userId = $rootScope.user._id;
            return $http.post('/household', $rootScope.household);
        }

        function submit() {
            if ($rootScope.user) {
                $rootScope.household.userId = $rootScope.user._id;
            }

            return $http.post('/household', $rootScope.household);
        }

        function clear () {
            $rootScope.household = Object.create(Household);
        }
    }

})();

(function() {
    'use strict';

    angular
        .module('eatChallengeApp')
        .service('Sections', sectionsService);

    sectionsService.$inject = ['$rootScope' ,'$state'];

    function sectionsService($rootScope, $state) {
        var sections = [
            {
                label: 'Let\’s Get Started! ',
                state: 'start',
                completed: false,
                required: true,
                showSummaryAfter: false
            },            {
                label: 'Children',
                state: 'children',
                completed: false,
                required: true,
                showSummaryAfter: false
            },
            {
                label: 'Household Members',
                state: 'household',
                completed: false,
                required: true,
                showSummaryAfter: true
            },
            {
                label: 'Children\'s Income',
                state: 'childIncome',
                completed: false,
                required: true,
                showSummaryAfter: false
            },
            {
                label: 'Household Income',
                state: 'householdIncome',
                completed: false,
                required: true,
                showSummaryAfter: true
            },
            {
                label: 'Disclosure',
                state: 'disclosure',
                completed: false,
                required: true,
                showSummaryAfter: false
            },
            {
                label: 'Sign and Confirm',
                state: 'signature',
                completed: false,
                required: true,
                showSummaryAfter: false
            },
        ];

        var indexedSections = _.indexBy(sections, 'state');

        var service = {
            meansTest: true,
            sections: sections,
            indexedSections: indexedSections,
            navigateToNext: navigateToNext,
            goBack: goBack,
            updateRequiredSections: updateRequiredSections
        };

        return service;
        //////////////////////

        function updateRequiredSections() {
            var household = $rootScope.household;
            service.meansTest = true;
            var assistanceProgramHousehold = isAssistanceHousehold(household);
            var categoricallyQualified = allStudentsCategoricallyQualify(household);

            if (assistanceProgramHousehold || categoricallyQualified) {
                service.meansTest = false;
                indexedSections['childIncome'].required = false;
                indexedSections['household'].required = false;
                indexedSections['householdIncome'].required = false;
                return;
            }

            sections.forEach(function(section) {
                section.required = true;
            });
        }

        function isAssistanceHousehold(household) {
            var currentChild;
            for (var i = 0 ; i < household.children.length; i++) {
                currentChild = household.children[i];
                if (currentChild.assistanceProgram && currentChild.assistanceProgram.participant) {
                    return true;
                }
            }
            return false;
        }

        function allStudentsCategoricallyQualify(household) {
            var currentChild, childQualifies;

            var enrolledChildren = _.filter(household.children, function(c) {
                return c.enrolled === true;
            });

            // must have kids to qualify
            if (enrolledChildren.length === 0) {
                return false;
            }

            //all children are categorically qualified
            for (var i = 0 ; i < enrolledChildren.length; i++) {
                currentChild = household.children[i];
                if (!currentChild.specialStatus.fosterChild &&
                    !currentChild.specialStatus.homelessMigrantRunaway &&
                    !currentChild.specialStatus.headStartParticipant
                ) {
                    return false;
                }
            }

            return true;

        }

        function findNext(currentState) {
            var currentIndex = _.findIndex(sections, function(section) {
                return section.state === currentState;
            });

            // Look for the next required section
            for (var i = currentIndex + 1; i < sections.length; i++) {
                if (sections[i].required) {
                    return sections[i].state;
                }
            }

            // if there are no more required sections, we're done.
            return 'confirmation';
        }

        function navigateToNext() {
            var nextSection;
            var currentState = $rootScope.currentState || $state.$current.self.name;
            var previousState = $rootScope.previousState || 'start';
            // If on the summary page go to the next form page
            if (currentState === 'soFar') {
                if (previousState) {
                    nextSection  = findNext(previousState);
                } else {
                    // This happens if you refresh the page on the so far screen.
                    // Come up with something better? stash in url?
                    nextSection = 'start';
                }
            } else if (indexedSections[currentState].showSummaryAfter) {
                // if on a form page, go to summary page
                nextSection = 'soFar';
            } else {
                // If you're on some other page like start or signature
                // Move ahead as normal
                nextSection  = findNext(currentState);
            }

            $state.go(nextSection);
        }

        function goBack() {
            var previousState = $rootScope.previousState || 'start';
            $state.go(previousState);
        }

    }

})();

//# sourceMappingURL=data:application/json;base64,
